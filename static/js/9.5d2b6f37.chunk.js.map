{"version":3,"sources":["../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","components/sections/SongCard.js","components/sections/HomePage.js"],"names":["makeStyles","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","CardActionArea","React","props","ref","children","classes","className","focusVisibleClassName","other","_objectWithoutProperties","ButtonBase","clsx","root","focusVisible","focusHighlight","withStyles","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","name","MEDIA_COMPONENTS","CardMedia","_props$component","component","Component","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","useStyles","card","height","margin","whiteSpace","MediaCard","songs","categotyTitle","useContext","GlobalContext","dispatch","setCurrentVideoSnippet","data","type","snippet","console","log","renderCards","map","song","Card","key","id","onClick","video","resourceId","videoId","title","channelTitle","maxThumbnail","sdThumbnail","thumbnails","high","url","loading","CardContent","Typography","gutterBottom","variant","slice","marginLeft","Container","LinearProgress","color","playlistsIds","HomePage","useState","songObj","setSongObj","fetchFromApi","setTimeout","getTrendingMusic","a","youtubeSearch","get","params","chart","videoCategoryId","regionCode","localStorage","getItem","res","items","getPlayListItems","playlistId","then","prevState","trending","latestSongs","romanticSongs","topBolloywood","useEffect","startingTime","Date","storedTime","savedSongs","JSON","parse","window","navigator","onLine","alert","timeElapsedInHr","setItem","checkTimeAndFetch","stringify","SongCard"],"mappings":"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","file":"static/js/9.5d2b6f37.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import React, { useContext } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  makeStyles,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  LinearProgress,\r\n  Container\r\n} from \"@material-ui/core\";\r\nimport { GlobalContext } from \"../GlobalState\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: 300,\r\n    height: 236,\r\n    display: \"inline-block\",\r\n    margin: \"10px\",\r\n    whiteSpace: \"pre-wrap\"\r\n  },\r\n  media: {\r\n    height: 160\r\n  }\r\n});\r\nconst MediaCard = ({ songs, categotyTitle }) => {\r\n  const [{}, dispatch] = useContext(GlobalContext);\r\n  const setCurrentVideoSnippet = data => {\r\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\r\n  };\r\n\r\n  const handleClick = video => {\r\n    // set all the info of current clicked video in this object\r\n\r\n    if (!video.snippet.resourceId) {\r\n      setCurrentVideoSnippet({\r\n        id: video.id,\r\n        title: video.snippet.title,\r\n        channelTitle: video.snippet.channelTitle,\r\n        maxThumbnail: `https://img.youtube.com/vi/${video.id}/maxresdefault.jpg`,\r\n        sdThumbnail: `https://img.youtube.com/vi/${video.id}/sddefault.jpg`\r\n        // this is the url of the max resolution of thumbnail\r\n      });\r\n    } else {\r\n      setCurrentVideoSnippet({\r\n        id: video.snippet.resourceId.videoId,\r\n        title: video.snippet.title,\r\n        channelTitle: video.snippet.channelTitle,\r\n        maxThumbnail: `https://img.youtube.com/vi/${video.snippet.resourceId.videoId}/maxresdefault.jpg`,\r\n        sdThumbnail: `https://img.youtube.com/vi/${video.snippet.resourceId.videoId}/sddefault.jpg`\r\n        // this is the url of the max resolution of thumbnail\r\n      });\r\n    }\r\n\r\n    console.log(video);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  console.log(\"card re rendered\");\r\n\r\n  if (songs) {\r\n    const renderCards = songs.map(song => {\r\n      return (\r\n        <Card className={classes.card} key={song.id}>\r\n          <CardActionArea onClick={() => handleClick(song)}>\r\n            <CardMedia\r\n              className={classes.media}\r\n              component=\"img\"\r\n              src={song.snippet.thumbnails.high.url}\r\n              loading=\"lazy\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n                {song.snippet.title.slice(0, 70) + \" ...\"}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      );\r\n    });\r\n    return (\r\n      <>\r\n        <Typography variant=\"h5\" style={{ marginLeft: \"15px\" }}>\r\n          {categotyTitle}\r\n        </Typography>\r\n        <div className={\"cardSlider\"}>{renderCards}</div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container style={{ height: \"25vh\" }}>\r\n        <LinearProgress color=\"primary\" />\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MediaCard;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { Typography } from \"@material-ui/core\";\r\nimport SongCard from \"./SongCard\";\r\nimport youtubeSearch from \"../../apis/youtubeSearch\";\r\n\r\n// make a permanent playlist object with few songs catergory\r\nconst playlistsIds = {\r\n  LatestSongs: \"PLFgquLnL59akA2PflFpeQG9L01VFg90wS\",\r\n  VpopSongs: \"PLWW7O4OXAEuPL8HUT5ELAOwdvpPA1YZd6\",\r\n  EdmSongs: \"PLw-VjHDlEOgs658kAHR_LAaILBXb-s6Q5\",\r\n  TopBolloywood: \"PLcRN7uK9CFpPkvCc-08tWOQo6PAg4u0lA\",\r\n  TopPop: \"PL-i6X_qhBtJvEAEGGe1vYJy7B3hM2Bgzk\",\r\n  Reggaeton: \"PLS_oEMUyvA728OZPmF9WPKjsGtfC75LiN\"\r\n};\r\n\r\n// let slowConnectionTimeout;\r\nconst HomePage = () => {\r\n  // for home playlist\r\n  const [songObj, setSongObj] = useState({});\r\n\r\n  const fetchFromApi = () => {\r\n    let slowConnectionTimeout = setTimeout(() => {}, 5000);\r\n\r\n    const getTrendingMusic = async () => {\r\n      const res = await youtubeSearch.get(\"videos\", {\r\n        params: {\r\n          chart: \"mostPopular\",\r\n          videoCategoryId: \"10\",\r\n          regionCode: localStorage.getItem(\"country_code\")\r\n        }\r\n      });\r\n\r\n      return res.data.items;\r\n    };\r\n\r\n    const getPlayListItems = async data => {\r\n      const res = await youtubeSearch.get(\"playlistItems\", {\r\n        params: {\r\n          playlistId: data\r\n        }\r\n      });\r\n      return res.data.items;\r\n    };\r\n\r\n    getTrendingMusic().then(data => {\r\n      setSongObj(prevState => {\r\n        return { ...prevState, ...{ trending: data } };\r\n      });\r\n    });\r\n\r\n    getPlayListItems(playlistsIds.VpopSongs).then(data => {\r\n      setSongObj(prevState => {\r\n        return { ...prevState, ...{ latestSongs: data } };\r\n      });\r\n    });\r\n\r\n    getPlayListItems(playlistsIds.TopPop).then(data => {\r\n      setSongObj(prevState => {\r\n        return { ...prevState, ...{ romanticSongs: data } };\r\n      });\r\n    });\r\n\r\n    getPlayListItems(playlistsIds.EdmSongs).then(data => {\r\n      setSongObj(prevState => {\r\n        return { ...prevState, ...{ topBolloywood: data } };\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const startingTime = new Date();\r\n    const storedTime = localStorage.getItem(\"trackTime\");\r\n    const savedSongs = JSON.parse(localStorage.getItem(\"homePageSongObj\"));\r\n\r\n    if (!window.navigator.onLine) {\r\n      alert(\"You don't have internet!\");\r\n    }\r\n\r\n    const checkTimeAndFetch = () => {\r\n      const timeElapsed = new Date() - Date.parse(storedTime); //parse the date\r\n\r\n      const timeElapsedInHr = timeElapsed / (1000 * 60 * 60); //convert ms into hr\r\n\r\n      // if time is more than 12 hr we will fetch from the api\r\n\r\n      console.log(\"Saved song\", savedSongs);\r\n      if (timeElapsedInHr > 12 || !savedSongs.latestSongs) {\r\n        fetchFromApi();\r\n        localStorage.setItem(\"trackTime\", startingTime); //dont forgot to update the time\r\n      } else {\r\n        setSongObj(savedSongs);\r\n      }\r\n    };\r\n\r\n    if (!storedTime) {\r\n      // if no time stored we will store it\r\n      localStorage.setItem(\"trackTime\", startingTime);\r\n      fetchFromApi();\r\n    } else {\r\n      checkTimeAndFetch();\r\n    }\r\n  }, []);\r\n\r\n  // if song object changes we will push it to localstoarge\r\n  useEffect(() => {\r\n    localStorage.setItem(\"homePageSongObj\", JSON.stringify(songObj));\r\n  }, [songObj]);\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <SongCard songs={songObj.trending} categotyTitle={\"Trending Now\"} />\r\n\r\n      <SongCard songs={songObj.latestSongs} categotyTitle={\"VNpop Music\"} />\r\n\r\n      <SongCard songs={songObj.romanticSongs} categotyTitle={\"Bolero List\"} />\r\n\r\n      <SongCard songs={songObj.topBolloywood} categotyTitle={\"Top EDM\"} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}