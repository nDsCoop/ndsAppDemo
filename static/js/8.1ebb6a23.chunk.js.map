{"version":3,"sources":["components/sections/FeedbackForm.js"],"names":["FeedbackForm","style","height","container","direction","justify","alignItems","className","variant","gutterBottom","href"],"mappings":"0GAAA,4CAyJeA,UA9IM,WAkEnB,OACE,kBAAC,IAAD,CACAC,MAAO,CAAEC,OAAQ,QACjBC,WAAS,EACTC,UAAU,SACVC,QAAQ,eACRC,WAAW,UAET,yBAAKC,UAAU,sBACf,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAc,GAAvC,oEACmE,uBAAGC,KAAK,mBAAR,QADnE,eACkH","file":"static/js/8.1ebb6a23.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n// import { loadReCaptcha, ReCaptcha } from \"react-recaptcha-v3\";\r\n// import axios from \"../../apis/axios\";\r\n// import { GlobalContext } from \"../GlobalState\";\r\n// import SnackbarMessage from \"../SnackbarMessage\";\r\n\r\n// let captchaToken;\r\nconst FeedbackForm = () => {\r\n  // const [{}, dispatch] = useContext(GlobalContext);\r\n\r\n  // const setSnackbarMsg = React.useCallback(\r\n  //   data => {\r\n  //     dispatch({ type: \"setSnackbarMsg\", snippet: data });\r\n  //   },\r\n  //   [dispatch]\r\n  // );\r\n  \r\n  // const [isSending, setIsSending] = React.useState(false);\r\n  // const formEl = React.useRef(null);\r\n\r\n  // const submitForm = async (e) => {\r\n  //   // set state to sending\r\n  //   setIsSending(true);\r\n  //   const formData = new FormData(formEl.current);\r\n  //   const name = formData.get(\"name\");\r\n  //   const email = formData.get(\"email\");\r\n  //   const message = formData.get(\"message\");\r\n\r\n  //   e.preventDefault();\r\n\r\n  //   const post = {\r\n  //     name: name,\r\n  //     email: email,\r\n  //     message: message,\r\n  //     token: captchaToken,\r\n  //     timestamp: new Date(),\r\n  //     }\r\n\r\n  //   await axios\r\n  //         .post('/ndsapi/feedback', post)\r\n  //         .then(function(response) {\r\n  //           // console.log(response.data.status);\r\n  //           console.log(response.data.message);\r\n  //           // also clear the form\r\n  //           formEl.current.reset();\r\n  //           setSnackbarMsg(`Sent your message: ${response.data.message}`);\r\n  //           setIsSending(false);\r\n  //         })\r\n  //         .catch(function(error) {\r\n  //           // console.log(error.response.status);\r\n  //           if (error.response) {\r\n  //             if (error.response.status === 429) {\r\n  //               formEl.current.reset();\r\n\r\n  //               setSnackbarMsg(\"We accept limited feedback!\");\r\n  //             }\r\n  //           }\r\n  //           setIsSending(false);\r\n  //         });\r\n  //     };\r\n\r\n  // React.useEffect(() => {\r\n  //   loadReCaptcha(\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\");\r\n  // }, []);\r\n\r\n  // const verifyCallback = token => {\r\n  //   console.log(token);\r\n  //   captchaToken = token;\r\n  //   const captchaBox = document.querySelector(\".grecaptcha-badge\");\r\n  //   captchaBox.remove();\r\n  //   // remove captcha badge\r\n  // };\r\n\r\n  return (\r\n    <Grid\r\n    style={{ height: \"80vh\" }}\r\n    container\r\n    direction=\"column\"\r\n    justify=\"space-around\"\r\n    alignItems=\"center\"\r\n    >\r\n      <div className=\"form-section-music\">\r\n      <Typography variant=\"h5\" gutterBottom={true}>\r\n        The current page has been changed to the FeedbackApp page, click <a href=\"/about/feedback\">here</a> to continue{\" \"}\r\n      </Typography>\r\n      </div>\r\n      {/* <SnackbarMessage />\r\n      <ReCaptcha\r\n        sitekey=\"6Le1toEUAAAAAITyNwqEMaz3hFAYzciSJDMomrgN\"\r\n        action=\"action_name\"\r\n        verifyCallback={verifyCallback}\r\n      />\r\n      <TextField\r\n        id=\"outlined-email-input\"\r\n        label=\"Name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        autoComplete=\"name\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        required\r\n      />\r\n      <TextField\r\n        id=\"outlined-email-input\"\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        required\r\n      />\r\n      <TextField\r\n        id=\"outlined-email-input\"\r\n        label=\"Feedback\"\r\n        multiline\r\n        rows=\"4\"\r\n        type=\"text\"\r\n        name=\"message\"\r\n        autoComplete=\"feedback\"\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        required\r\n      />\r\n      {isSending ? (\r\n        <LinearProgress\r\n          style={{\r\n            width: \"100%\",\r\n            transform: \"translateY(-12px)\",\r\n            borderRadius: \"2px\"\r\n          }}\r\n        />\r\n      ) : null}\r\n      <Button\r\n        style={{ marginTop: \"10px\" }}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        disabled={isSending ? true : false}\r\n      >\r\n        {isSending ? \"Sending Feedback\" : \"Send Feedback\"}\r\n      </Button> */}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FeedbackForm;\r\n"],"sourceRoot":""}